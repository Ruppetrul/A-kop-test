type Query {
    users: [User!]!
}

type Mutation {
    inviteCompany(input: InviteCompanyInput!): InviteCompanyPayload!

    inviteUser(input: InviteUserInput!): InviteUserPayload!

    activateUser(input: ActivateUserInput!): Void
}

#inviteCompany
input InviteCompanyInput {
    ownerEmail: String!
    organizationName: String!
}

type InviteCompanyPayload {
    token: String
    errorMessage: String
}

#inviteUser
input InviteUserInput {
    email: String!
    companyId: Int!
    roles: [Int!]!
}

type InviteUserPayload {
    token: String
}

#activateUser
input ActivateUserInput {
    email: String!
    name: String!
    surname: String!
    password: String!
    jwt: String!
}
